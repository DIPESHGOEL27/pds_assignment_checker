"Student_Name";"Test_Case_1 (20)";"Test_Case_2 (20)";"Code_1 (30)";"Code_2 (30)";"Code_3 (-5)";"Code_4 (-5)";"Total_Marks (100)";"Comments"
21MA10036;20;20;30;30;0;0;100;Keep up the good work~~~~========= TEST CASES =========~~~~~~PASSED: Test Case 1: ~~~~INPUT:~~Enter three integers: 5 3 7~~~~~~OUTPUT:~~---Before function call----~~Address of a = ADDR_A~~Address of b = ADDR_B~~Address of c = ADDR_C~~Values in a, b, c = 5, 3, 7~~---After function call----~~Address of a = ADDR_A~~Address of b = ADDR_B~~Address of c = ADDR_C~~Values in a, b, c = 3, 5, 7~~~~~~  Mark/s obtained: 20 out of 20~~~~~~PASSED: Test Case 2: ~~~~INPUT:~~Enter three integers: 1 2 3~~~~~~OUTPUT:~~---Before function call----~~Address of a = ADDR_A~~Address of b = ADDR_B~~Address of c = ADDR_C~~Values in a, b, c = 1, 2, 3~~---After function call----~~Address of a = ADDR_A~~Address of b = ADDR_B~~Address of c = ADDR_C~~Values in a, b, c = 1, 2, 3~~~~~~  Mark/s obtained: 20 out of 20~~~~~~========= CODE CASES =========~~~~~~PASSED: Code Case 1:~~Logic is correct and gives expected output~~  Mark/s obtained: 30 out of 30~~~~~~PASSED: Code Case 2:~~Efficient and Optimal steps used to get to output~~  Mark/s obtained: 30 out of 30~~~~~~==============================~~~~########### TOTAL MARKS OBTAINED = 100 ###########
21MA10055;20;20;30;30;0;0;100;Good work~~~~========= TEST CASES =========~~~~~~PASSED: Test Case 1: ~~~~INPUT:~~Enter three integers: 5 3 7~~~~~~OUTPUT:~~---Before function call----~~Address of a = ADDR_A~~Address of b = ADDR_B~~Address of c = ADDR_C~~Values in a, b, c = 5, 3, 7~~---After function call----~~Address of a = ADDR_A~~Address of b = ADDR_B~~Address of c = ADDR_C~~Values in a, b, c = 3, 5, 7~~~~~~  Mark/s obtained: 20 out of 20~~~~~~PASSED: Test Case 2: ~~~~INPUT:~~Enter three integers: 1 2 3~~~~~~OUTPUT:~~---Before function call----~~Address of a = ADDR_A~~Address of b = ADDR_B~~Address of c = ADDR_C~~Values in a, b, c = 1, 2, 3~~---After function call----~~Address of a = ADDR_A~~Address of b = ADDR_B~~Address of c = ADDR_C~~Values in a, b, c = 1, 2, 3~~~~~~  Mark/s obtained: 20 out of 20~~~~~~========= CODE CASES =========~~~~~~PASSED: Code Case 1:~~Logic is correct and gives expected output~~  Mark/s obtained: 30 out of 30~~~~~~PASSED: Code Case 2:~~Efficient and Optimal steps used to get to output~~  Mark/s obtained: 30 out of 30~~~~~~==============================~~~~########### TOTAL MARKS OBTAINED = 100 ###########
21ME10024;20;20;5;5;-5;0;45;The required answer should use pointers and call by reference~~~~========= TEST CASES =========~~~~~~PASSED: Test Case 1: ~~~~INPUT:~~Enter three integers: 5 3 7~~~~~~OUTPUT:~~---Before function call----~~Address of a = ADDR_A~~Address of b = ADDR_B~~Address of c = ADDR_C~~Values in a, b, c = 5, 3, 7~~---After function call----~~Address of a = ADDR_A~~Address of b = ADDR_B~~Address of c = ADDR_C~~Values in a, b, c = 3, 5, 7~~~~~~  Mark/s obtained: 20 out of 20~~~~~~PASSED: Test Case 2: ~~~~INPUT:~~Enter three integers: 1 2 3~~~~~~OUTPUT:~~---Before function call----~~Address of a = ADDR_A~~Address of b = ADDR_B~~Address of c = ADDR_C~~Values in a, b, c = 1, 2, 3~~---After function call----~~Address of a = ADDR_A~~Address of b = ADDR_B~~Address of c = ADDR_C~~Values in a, b, c = 1, 2, 3~~~~~~  Mark/s obtained: 20 out of 20~~~~~~========= CODE CASES =========~~~~~~FAILED: Code Case 1:~~Logic is correct and gives expected output~~  Mark/s obtained: 5 out of 30~~~~~~FAILED: Code Case 2:~~Efficient and Optimal steps used to get to output~~  Mark/s obtained: 5 out of 30~~~~~~FAILED: Negative Code Case 3:~~Comments missing, logic hard to understand~~  Mark/s lost: -5 out of -5~~~~~~==============================~~~~########### TOTAL MARKS OBTAINED = 45 ############
21IM10011;20;20;30;30;0;0;100;Great Job~~~~========= TEST CASES =========~~~~~~PASSED: Test Case 1: ~~~~INPUT:~~Enter three integers: 5 3 7~~~~~~OUTPUT:~~---Before function call----~~Address of a = ADDR_A~~Address of b = ADDR_B~~Address of c = ADDR_C~~Values in a, b, c = 5, 3, 7~~---After function call----~~Address of a = ADDR_A~~Address of b = ADDR_B~~Address of c = ADDR_C~~Values in a, b, c = 3, 5, 7~~~~~~  Mark/s obtained: 20 out of 20~~~~~~PASSED: Test Case 2: ~~~~INPUT:~~Enter three integers: 1 2 3~~~~~~OUTPUT:~~---Before function call----~~Address of a = ADDR_A~~Address of b = ADDR_B~~Address of c = ADDR_C~~Values in a, b, c = 1, 2, 3~~---After function call----~~Address of a = ADDR_A~~Address of b = ADDR_B~~Address of c = ADDR_C~~Values in a, b, c = 1, 2, 3~~~~~~  Mark/s obtained: 20 out of 20~~~~~~========= CODE CASES =========~~~~~~PASSED: Code Case 1:~~Logic is correct and gives expected output~~  Mark/s obtained: 30 out of 30~~~~~~PASSED: Code Case 2:~~Efficient and Optimal steps used to get to output~~  Mark/s obtained: 30 out of 30~~~~~~==============================~~~~########### TOTAL MARKS OBTAINED = 100 ###########
21IM10030;20;20;30;30;-5;0;95;========= TEST CASES =========~~~~~~PASSED: Test Case 1: ~~~~INPUT:~~Enter three integers: 5 3 7~~~~~~OUTPUT:~~---Before function call----~~Address of a = ADDR_A~~Address of b = ADDR_B~~Address of c = ADDR_C~~Values in a, b, c = 5, 3, 7~~---After function call----~~Address of a = ADDR_A~~Address of b = ADDR_B~~Address of c = ADDR_C~~Values in a, b, c = 3, 5, 7~~~~~~  Mark/s obtained: 20 out of 20~~~~~~PASSED: Test Case 2: ~~~~INPUT:~~Enter three integers: 1 2 3~~~~~~OUTPUT:~~---Before function call----~~Address of a = ADDR_A~~Address of b = ADDR_B~~Address of c = ADDR_C~~Values in a, b, c = 1, 2, 3~~---After function call----~~Address of a = ADDR_A~~Address of b = ADDR_B~~Address of c = ADDR_C~~Values in a, b, c = 1, 2, 3~~~~~~  Mark/s obtained: 20 out of 20~~~~~~========= CODE CASES =========~~~~~~PASSED: Code Case 1:~~Logic is correct and gives expected output~~  Mark/s obtained: 30 out of 30~~~~~~PASSED: Code Case 2:~~Efficient and Optimal steps used to get to output~~  Mark/s obtained: 30 out of 30~~~~~~FAILED: Negative Code Case 3:~~Comments missing, logic hard to understand~~  Mark/s lost: -5 out of -5~~~~~~==============================~~~~########### TOTAL MARKS OBTAINED = 95 ############
21MA10017;20;20;30;30;0;0;0;<PLAG DETECTED - AWARDED 0>~~~~If you have not copied from anywhere,~~Please do not panic.~~Plag is decided by a plag checking program.~~For now continue to do your best.
21ME10043;20;20;30;30;0;0;100;Good~~~~========= TEST CASES =========~~~~~~PASSED: Test Case 1: ~~~~INPUT:~~Enter three integers: 5 3 7~~~~~~OUTPUT:~~---Before function call----~~Address of a = ADDR_A~~Address of b = ADDR_B~~Address of c = ADDR_C~~Values in a, b, c = 5, 3, 7~~---After function call----~~Address of a = ADDR_A~~Address of b = ADDR_B~~Address of c = ADDR_C~~Values in a, b, c = 3, 5, 7~~~~~~  Mark/s obtained: 20 out of 20~~~~~~PASSED: Test Case 2: ~~~~INPUT:~~Enter three integers: 1 2 3~~~~~~OUTPUT:~~---Before function call----~~Address of a = ADDR_A~~Address of b = ADDR_B~~Address of c = ADDR_C~~Values in a, b, c = 1, 2, 3~~---After function call----~~Address of a = ADDR_A~~Address of b = ADDR_B~~Address of c = ADDR_C~~Values in a, b, c = 1, 2, 3~~~~~~  Mark/s obtained: 20 out of 20~~~~~~========= CODE CASES =========~~~~~~PASSED: Code Case 1:~~Logic is correct and gives expected output~~  Mark/s obtained: 30 out of 30~~~~~~PASSED: Code Case 2:~~Efficient and Optimal steps used to get to output~~  Mark/s obtained: 30 out of 30~~~~~~==============================~~~~########### TOTAL MARKS OBTAINED = 100 ###########
21IM30026;20;20;5;5;0;0;50;The required answer should use pointers and call by reference~~~~========= TEST CASES =========~~~~~~PASSED: Test Case 1: ~~~~INPUT:~~Enter three integers: 5 3 7~~~~~~OUTPUT:~~---Before function call----~~Address of a = ADDR_A~~Address of b = ADDR_B~~Address of c = ADDR_C~~Values in a, b, c = 5, 3, 7~~---After function call----~~Address of a = ADDR_A~~Address of b = ADDR_B~~Address of c = ADDR_C~~Values in a, b, c = 3, 5, 7~~~~~~  Mark/s obtained: 20 out of 20~~~~~~PASSED: Test Case 2: ~~~~INPUT:~~Enter three integers: 1 2 3~~~~~~OUTPUT:~~---Before function call----~~Address of a = ADDR_A~~Address of b = ADDR_B~~Address of c = ADDR_C~~Values in a, b, c = 1, 2, 3~~---After function call----~~Address of a = ADDR_A~~Address of b = ADDR_B~~Address of c = ADDR_C~~Values in a, b, c = 1, 2, 3~~~~~~  Mark/s obtained: 20 out of 20~~~~~~========= CODE CASES =========~~~~~~FAILED: Code Case 1:~~Logic is correct and gives expected output~~  Mark/s obtained: 5 out of 30~~~~~~FAILED: Code Case 2:~~Efficient and Optimal steps used to get to output~~  Mark/s obtained: 5 out of 30~~~~~~==============================~~~~########### TOTAL MARKS OBTAINED = 50 ############
21IM30007;20;20;30;30;0;0;0;<PLAG DETECTED - AWARDED 0>~~~~If you have not copied from anywhere,~~Please do not panic.~~Plag is decided by a plag checking program.~~For now continue to do your best.
21ME10062;20;20;30;30;0;0;100;Keep up the good work~~~~========= TEST CASES =========~~~~~~PASSED: Test Case 1: ~~~~INPUT:~~Enter three integers: 5 3 7~~~~~~OUTPUT:~~---Before function call----~~Address of a = ADDR_A~~Address of b = ADDR_B~~Address of c = ADDR_C~~Values in a, b, c = 5, 3, 7~~---After function call----~~Address of a = ADDR_A~~Address of b = ADDR_B~~Address of c = ADDR_C~~Values in a, b, c = 3, 5, 7~~~~~~  Mark/s obtained: 20 out of 20~~~~~~PASSED: Test Case 2: ~~~~INPUT:~~Enter three integers: 1 2 3~~~~~~OUTPUT:~~---Before function call----~~Address of a = ADDR_A~~Address of b = ADDR_B~~Address of c = ADDR_C~~Values in a, b, c = 1, 2, 3~~---After function call----~~Address of a = ADDR_A~~Address of b = ADDR_B~~Address of c = ADDR_C~~Values in a, b, c = 1, 2, 3~~~~~~  Mark/s obtained: 20 out of 20~~~~~~========= CODE CASES =========~~~~~~PASSED: Code Case 1:~~Logic is correct and gives expected output~~  Mark/s obtained: 30 out of 30~~~~~~PASSED: Code Case 2:~~Efficient and Optimal steps used to get to output~~  Mark/s obtained: 30 out of 30~~~~~~==============================~~~~########### TOTAL MARKS OBTAINED = 100 ###########
21ME10081;20;20;30;30;0;0;100;Good~~~~========= TEST CASES =========~~~~~~PASSED: Test Case 1: ~~~~INPUT:~~Enter three integers: 5 3 7~~~~~~OUTPUT:~~---Before function call----~~Address of a = ADDR_A~~Address of b = ADDR_B~~Address of c = ADDR_C~~Values in a, b, c = 5, 3, 7~~---After function call----~~Address of a = ADDR_A~~Address of b = ADDR_B~~Address of c = ADDR_C~~Values in a, b, c = 3, 5, 7~~~~~~  Mark/s obtained: 20 out of 20~~~~~~PASSED: Test Case 2: ~~~~INPUT:~~Enter three integers: 1 2 3~~~~~~OUTPUT:~~---Before function call----~~Address of a = ADDR_A~~Address of b = ADDR_B~~Address of c = ADDR_C~~Values in a, b, c = 1, 2, 3~~---After function call----~~Address of a = ADDR_A~~Address of b = ADDR_B~~Address of c = ADDR_C~~Values in a, b, c = 1, 2, 3~~~~~~  Mark/s obtained: 20 out of 20~~~~~~========= CODE CASES =========~~~~~~PASSED: Code Case 1:~~Logic is correct and gives expected output~~  Mark/s obtained: 30 out of 30~~~~~~PASSED: Code Case 2:~~Efficient and Optimal steps used to get to output~~  Mark/s obtained: 30 out of 30~~~~~~==============================~~~~########### TOTAL MARKS OBTAINED = 100 ###########
21ME10100;0;0;0;0;0;0;0;A file was not submitted properly ~~Mark/s lost: 100 out of 100~~~~~~==============================~~~~############ TOTAL MARKS OBTAINED = 0 ############
20IE10039;0;0;0;0;0;0;0;A file was not submitted properly ~~Mark/s lost: 100 out of 100~~~~~~==============================~~~~############ TOTAL MARKS OBTAINED = 0 ############
21ME30015;0;0;0;0;0;0;0;A file was not submitted properly ~~Mark/s lost: 100 out of 100~~~~~~==============================~~~~############ TOTAL MARKS OBTAINED = 0 ############
21IE10036;0;0;0;0;0;0;0;A file was not submitted properly ~~Mark/s lost: 100 out of 100~~~~~~==============================~~~~############ TOTAL MARKS OBTAINED = 0 ############
21ME10005;0;0;0;0;0;0;0;A file was not submitted properly ~~Mark/s lost: 100 out of 100~~~~~~==============================~~~~############ TOTAL MARKS OBTAINED = 0 ############
